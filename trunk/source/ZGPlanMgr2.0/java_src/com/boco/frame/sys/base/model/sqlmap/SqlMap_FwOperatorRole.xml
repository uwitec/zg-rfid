<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="FwOperatorRole">
    <typeAlias alias="fwOperatorRole" type="com.boco.frame.sys.base.model.FwOperatorRole"/>
	<resultMap id="fwOperatorRoleResult" class="fwOperatorRole">
		<result property="cuid" column="t0_CUID"/>
		<result property="operatorId" column="t0_OPERATOR_ID"/>
		<result property="operatorId_related.value" column="t0_0_1_t0_LABEL_CN"/>
		<result property="operatorId_related.relatedBmClassId" column="t0_0_1_BD"/>
		<result property="roleId" column="t0_ROLE_ID"/>
		<result property="roleId_related.value" column="t0_1_1_t0_LABEL_CN"/>
		<result property="roleId_related.relatedBmClassId" column="t0_1_1_BD"/>
    </resultMap>
    
    <!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
	        m.t0_CUID,
		    t0_0_1.t0_LABEL_CN as t0_0_1_t0_LABEL_CN,
	        'FW_OPERATOR' as t0_0_1_BD,
	        m.t0_OPERATOR_ID,
		    t0_1_1.t0_LABEL_CN as t0_1_1_t0_LABEL_CN,
	        'FW_ROLE' as t0_1_1_BD,
	        m.t0_ROLE_ID
	    ]]>
	</sql>
	
	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	    	<isNotEmpty prepend="AND" property="sqlQueryString">
	    		$sqlQueryString$ 
	    	</isNotEmpty>   
		    <isNotEmpty prepend="AND" property="cuid">
	       			m.t0_CUID like #cuid#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="operatorId">
	       			m.t0_OPERATOR_ID like #operatorId#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="roleId">
	       			m.t0_ROLE_ID like #roleId#
       		</isNotEmpty>    
	    </dynamic>	
	</sql>
	
    <insert id="insertFW_OPERATOR_ROLE" parameterClass="fwOperatorRole">
    <![CDATA[
        INSERT INTO
        FW_OPERATOR_ROLE (
        	CUID ,
        	OPERATOR_ID ,
        	ROLE_ID 
        ) VALUES (
        	#cuid# ,
        	#operatorId# ,
        	#roleId# 
        )
    ]]>
    	<selectKey resultClass="java.lang.String" type="pre" keyProperty="cuid" >
			select sys_guid() AS ID FROM DUAL
		</selectKey>
    </insert>
    
    <update id="updateFW_OPERATOR_ROLE" parameterClass="fwOperatorRole">
    <![CDATA[
        UPDATE FW_OPERATOR_ROLE SET
	        OPERATOR_ID = #operatorId# ,
	        ROLE_ID = #roleId# 
	    WHERE CUID = #cuid#
    ]]>
    </update>
    
	<delete id="deleteFW_OPERATOR_ROLE" parameterClass="java.lang.String">
		delete from FW_OPERATOR_ROLE 
		 where CUID = #cuid#
	</delete>
	
	<delete id="deleteFW_OPERATOR_ROLE_BY_OPERATOERID" parameterClass="java.lang.String">
		delete from FW_OPERATOR_ROLE 
		 where OPERATOR_ID = #cuid#
	</delete>
	
	<select id="getById" resultMap="fwOperatorRoleResult">
	    select <include refid="commonColumns"/>
	    <![CDATA[
	       from (select 
	        		t0.CUID as t0_CUID,
	        		t0.OPERATOR_ID as t0_OPERATOR_ID,
	        		t0.ROLE_ID as t0_ROLE_ID
	        from 
	        FW_OPERATOR_ROLE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_OPERATOR_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.NOTE as t0_NOTE
	        	 from
		        FW_ROLE t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ROLE_ID 
        where m.t0_CUID =#cuid# 
        ]]>
    </select>
    
    <select id="findByProperty" resultMap="fwOperatorRoleResult">
    	select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.OPERATOR_ID as t0_OPERATOR_ID,
	        		t0.ROLE_ID as t0_ROLE_ID
	        from 
	        FW_OPERATOR_ROLE t0
 			) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_OPERATOR_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.NOTE as t0_NOTE
	        	 from
		        FW_ROLE t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ROLE_ID 
        ]]>
        <include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="count" resultClass="long">
        select count(*) from (
        select <include refid="commonColumns"/>
        <![CDATA[
        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.OPERATOR_ID as t0_OPERATOR_ID,
	        		t0.ROLE_ID as t0_ROLE_ID
	        from 
	        FW_OPERATOR_ROLE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_OPERATOR_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.NOTE as t0_NOTE
	        	 from
		        FW_ROLE t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ROLE_ID 
    	]]>
		<include refid="dynamicWhere"/> 
		)
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="fwOperatorRoleResult">
    	select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.OPERATOR_ID as t0_OPERATOR_ID,
	        		t0.ROLE_ID as t0_ROLE_ID
	        from 
	        FW_OPERATOR_ROLE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_OPERATOR_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.NOTE as t0_NOTE
	        	 from
		        FW_ROLE t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ROLE_ID 
        ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="findAll" resultMap="fwOperatorRoleResult">
		select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.OPERATOR_ID as t0_OPERATOR_ID,
	        		t0.ROLE_ID as t0_ROLE_ID
	        from 
	        FW_OPERATOR_ROLE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_OPERATOR_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.NOTE as t0_NOTE
	        	 from
		        FW_ROLE t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ROLE_ID 
        ]]>
    </select>
    
</sqlMap>
