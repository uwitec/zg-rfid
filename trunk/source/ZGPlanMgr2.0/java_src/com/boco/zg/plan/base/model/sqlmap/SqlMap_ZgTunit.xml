<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ZgTunit">
    <typeAlias alias="zgTunit" type="com.boco.zg.plan.base.model.ZgTunit"/>
	<resultMap id="zgTunitResult" class="zgTunit">
		<result property="meins" column="t0_MEINS"/>
		<result property="msehl" column="t0_MSEHL"/>
		<result property="cuid" column="t0_CUID"/>
    </resultMap>
    
    <!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
	        m.t0_MEINS,
	        m.t0_MSEHL,
	        m.t0_CUID
	    ]]>
	</sql>
	
	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	    	<isNotEmpty prepend="AND" property="sqlQueryString">
	    		$sqlQueryString$ 
	    	</isNotEmpty>   
		    <isNotEmpty prepend="AND" property="meins">
	       			m.t0_MEINS like #meins#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="msehl">
	       			m.t0_MSEHL like #msehl#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="cuid">
	       			m.t0_CUID like #cuid#
       		</isNotEmpty>    
	    </dynamic>	
	</sql>
	
    <insert id="insertZG_T_UNIT" parameterClass="zgTunit">
    <![CDATA[
        INSERT INTO
        ZG_T_UNIT (
        	MEINS ,
        	MSEHL ,
        	CUID 
        ) VALUES (
        	#meins# ,
        	#msehl# ,
        	#cuid# 
        )
    ]]>
    	<selectKey resultClass="java.lang.String" type="pre" keyProperty="cuid" >
			select sys_guid() AS ID FROM DUAL
		</selectKey>
    </insert>
    
    <update id="updateZG_T_UNIT" parameterClass="zgTunit">
    <![CDATA[
        UPDATE ZG_T_UNIT SET
	        MEINS = #meins# ,
	        MSEHL = #msehl# ,
	    WHERE CUID = #cuid#
    ]]>
    </update>
    
	<delete id="deleteZG_T_UNIT" parameterClass="java.lang.String">
		delete from ZG_T_UNIT 
		 where CUID = #cuid#
	</delete>
	
	<select id="getById" resultMap="zgTunitResult">
	    select <include refid="commonColumns"/>
	    <![CDATA[
	       from (select 
	        		t0.MEINS as t0_MEINS,
	        		t0.MSEHL as t0_MSEHL,
	        		t0.CUID as t0_CUID
	        from 
	        ZG_T_UNIT t0
 ) m
        where m.t0_CUID =#cuid# 
        ]]>
    </select>
    
    <select id="findByProperty" resultMap="zgTunitResult">
    	select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.MEINS as t0_MEINS,
	        		t0.MSEHL as t0_MSEHL,
	        		t0.CUID as t0_CUID
	        from 
	        ZG_T_UNIT t0
 ) m
        ]]>
        <include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="count" resultClass="long">
        select count(*) from (
        select <include refid="commonColumns"/>
        <![CDATA[
        from ( select 
	        		t0.MEINS as t0_MEINS,
	        		t0.MSEHL as t0_MSEHL,
	        		t0.CUID as t0_CUID
	        from 
	        ZG_T_UNIT t0
 ) m
    	]]>
		<include refid="dynamicWhere"/> 
		)
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="zgTunitResult">
    	select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.MEINS as t0_MEINS,
	        		t0.MSEHL as t0_MSEHL,
	        		t0.CUID as t0_CUID
	        from 
	        ZG_T_UNIT t0
 ) m
        ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="findAll" resultMap="zgTunitResult">
		select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.MEINS as t0_MEINS,
	        		t0.MSEHL as t0_MSEHL,
	        		t0.CUID as t0_CUID
	        from 
	        ZG_T_UNIT t0
 ) m
        ]]>
    </select>
    
</sqlMap>
