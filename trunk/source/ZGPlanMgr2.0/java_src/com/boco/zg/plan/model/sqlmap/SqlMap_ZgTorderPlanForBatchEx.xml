<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ZgTorderPlanForBatchEx">
    <typeAlias alias="zgTorderPlanEx" type="com.boco.zg.plan.model.ZgTorderPlanEx"/>
    <typeAlias alias="zgTorderPlan" type="com.boco.zg.plan.base.model.ZgTorderPlan"/>
	<resultMap id="zgTorderPlanExResult" class="zgTorderPlanEx">
		<result property="cuid" column="CUID"/>
		<result property="pxdat" column="PXDAT"/>
		<result property="aufnr" column="AUFNR"/>
		<result property="pcdat" column="PCDAT"/>
		<result property="kdauf" column="KDAUF"/>
		<result property="planType" column="PLAN_TYPE"/>
		<result property="matnr" column="MATNR"/>
		<result property="maktx1" column="MAKTX1"/>
		<result property="psmng" column="PSMNG"/>
		<result property="plant" column="PLANT"/>
		<result property="arbpl" column="ARBPL"/>
		<result property="departmentId" column="DEPARTMENT_ID"/>
		<result property="departmentName" column="DEPARTMENT_NAME"/>
		<result property="userId" column="USER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="planDate" column="PLAN_DATE"/>
		<result property="planStartTime" column="PLAN_START_TIME"/>
		<result property="planEndTime" column="PLAN_END_TIME"/>
		<result property="state" column="STATE"/>
		<result property="auditingName" column="auditingName"/>
    </resultMap>
    
	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	    	<isNotEmpty prepend="AND" property="sqlQueryString">
	    		$sqlQueryString$ 
	    	</isNotEmpty>
	    	<isNotEmpty prepend="AND" property="cuid">
	       			cuid  like '%'||'$cuid$'||'%'
       		</isNotEmpty>
	    	<isNotEmpty prepend="AND" property="pxdat_start">
       			<![CDATA[PXDAT >= to_date(#pxdat_start#,'yyyy-mm-dd HH24:mi:ss') ]]>
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="pxdat_end">
       			<![CDATA[PXDAT <= to_date(#pxdat_end#,'yyyy-mm-dd HH24:mi:ss') ]]>
       		</isNotEmpty>
		    <isNotEmpty prepend="AND" property="sufnr">
	       			AUFNR = '$sufnr$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="pcdat_start">
       			<![CDATA[PCDAT >= to_date(#pcdat_start#,'yyyy-mm-dd HH24:mi:ss') ]]>
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="pcdat_end">
       			<![CDATA[PCDAT <= to_date(#pcdat_end#,'yyyy-mm-dd HH24:mi:ss') ]]>
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="kdauf">
	       			KDAUF = '$kdauf$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="matnr">
	       			MATNR = '$matnr$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="maktx1">
	       			MAKTX1 = '$maktx1$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="psmng">
	       			PSMNG = '$psmng$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="plant">
	       			PLANT = '$plant$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="arbpl">
	       			ARBPL = '$arbpl$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="departmentId">
	       			DEPARTMENT_ID = '$departmentId$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="departmentName">
	       			DEPARTMENT_NAME = $departmentName$
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="userId">
	       			USER_ID = '$userId$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="userName">
	       			USER_NAME like '%'||'$userName$'||'%'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="planDate_start">
       			<![CDATA[(PLAN_DATE >= to_date(#planDate_start#,'yyyy-mm-dd HH24:mi:ss') or PLAN_DATE is null) ]]>
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="planDate_end">
       			<![CDATA[(PLAN_DATE <= to_date(#planDate_end#,'yyyy-mm-dd HH24:mi:ss') or PLAN_DATE is null) ]]>
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="planStartTime">
	       			PLAN_START_TIME = $planStartTime$
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="planEndTime">
	       			PLAN_END_TIME = $planEndTime$
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="planType">
	       			PLAN_TYPE = '$planType$'
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="state">
	       			STATE = '$state$'
       		</isNotEmpty>
	    </dynamic>	
	</sql>
	
	<select id="count" resultClass="long">
        select count(1) from (
        	select op.CUID,
    	     	  null as PXDAt,
		         null as AUFNR,
		         null as PCDAT,
		         null as KDAUF,
		         null as MATNR,
		         null as MAKTX1,
		         null as PSMNG,
		         null as PLANT,
		         null as ARBPL,
		         op.DEPARTMENU_ID as DEPARTMENT_ID,
		         org.label_cn as DEPARTMENT_NAME,
		         op.USER_ID,
		         opr.label_cn as USER_NAME,
		         op.PLAN_DATE,
		         op.PLAN_START_TIME,
		         op.PLAN_END_TIME,
		         op.PLAN_TYPE,
		         op.STATE from  zg_t_order_plan op,fw_organization org,fw_operator opr 
	       <isNotEqual property="state" compareValue="4">
	        	<![CDATA[ ,ZG_T_ORDER_PLAN_COMMENT ztopc ]]>
	        </isNotEqual>
	       <![CDATA[ where 
			  org.cuid(+) = op.departmenu_id 
			 and opr.cuid(+) = op.user_id ]]>
			 <isNotEqual property="state" compareValue="4">
      		 	<![CDATA[ and ztopc.order_plan_id=op.cuid(+)]]>
      		 </isNotEqual>
		)
		<include refid="dynamicWhere"/>
	</select>
	
	
	
	
    
     <select id="pageSelectBatchPlan" resultMap="zgTorderPlanExResult">
		<![CDATA[
		  select CUID,PXDAT,AUFNR,PCDAT,KDAUF,MATNR,MAKTX1,PSMNG,PLANT,ARBPL,DEPARTMENT_ID,DEPARTMENT_NAME,USER_ID,USER_NAME,
           PLAN_DATE,PLAN_START_TIME,PLAN_END_TIME,PLAN_TYPE,STATE,auditingName,rownum from (
    	  select distinct op.CUID,
    	     	  null as PXDAt,
		         null as AUFNR,
		         null as PCDAT,
		         null as KDAUF,
		         null as MATNR,
		         null as MAKTX1,
		         null as PSMNG,
		         null as PLANT,
		         null as ARBPL,
		         op.DEPARTMENU_ID as DEPARTMENT_ID,
		         org.label_cn as DEPARTMENT_NAME,
		         op.USER_ID,
		         opr.label_cn as USER_NAME,
		         op.PLAN_DATE,
		         op.PLAN_START_TIME,
		         op.PLAN_END_TIME,
		         op.PLAN_TYPE,
		         op.STATE,]]>
		         <isEqual property="state" compareValue="4">
		         	<![CDATA[ null as auditingName ]]>
		         </isEqual>
		         <isNotEqual property="state" compareValue="4">
		         	<![CDATA[ (select distinct t.label_cn from fw_operator t where t.cuid(+)=ztopc.user_id) auditingName ]]>
             	 </isNotEqual>
	        <![CDATA[ from  zg_t_order_plan op,fw_organization org,fw_operator opr ]]>
	         <isNotEqual property="state" compareValue="4">
	        	<![CDATA[ ,ZG_T_ORDER_PLAN_COMMENT ztopc ]]>
	        </isNotEqual>
	       <![CDATA[ where 
			  org.cuid(+) = op.departmenu_id 
			 and opr.cuid(+) = op.user_id ]]>
			 <isNotEqual property="state" compareValue="4">
      		 	<![CDATA[ and ztopc.order_plan_id=op.cuid(+)]]>
      		 </isNotEqual>
		<![CDATA[) ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    
      <select id="isStartCar" resultClass="java.util.HashMap">
		select cp.*
		  from zg_t_carplan cp, zg_t_carbom cb
		 where cp.cuid = cb.car_plan_id
		   and cb.order_planbom_id in
		       (select t.cuid
		          from zg_t_order_planbom t
		         where t.order_plan_id = '$cuid$')
		   and cp.car_state = '8'
    </select>
    
    
    
    <update id="updateState" parameterClass="zgTorderPlan">
	    <![CDATA[
	        UPDATE ZG_T_ORDER_PLAN SET
		        STATE = #state#
		    WHERE CUID = #cuid#
	    ]]>
    </update>
    
       <update id="updateOrderPlanForBatch" parameterClass="zgTorderPlan">
	    <![CDATA[
	        UPDATE ZG_T_ORDER_PLAN SET
		        STATE = #state#,
		        plan_date=Sysdate,
		        DEPARTMENU_ID=(select distinct fe.org_id from FW_EMPLOYEE fe where fe.cuid = #userId#),
		        USER_ID=#userId#,
		        PLAN_START_TIME=#planStartTime#,
		        PLAN_END_TIME=#planEndTime#
		    WHERE CUID = #cuid#
	    ]]>
    </update>
    
    <delete id="delete_ZG_T_Carplan_By_OrderplanId" parameterClass="java.lang.String">
       <![CDATA[
		    delete from zg_t_carplan t
		 where t.cuid in
		       (select cb.car_plan_id
		          from zg_t_carbom cb, zg_t_order_plan p, zg_t_order_planbom pb
		         where p.cuid =#cuid#
		           and pb.order_plan_id = p.cuid
		           and cb.order_planbom_id = pb.cuid)
		   and t.Car_State != '8'  ]]>
	</delete>
	
	<delete id="delete_ZG_T_Carbom_By_OrderplanId" parameterClass="java.lang.String">
	  delete from zg_t_carbom cb
		 where exists
		 (select cb.cuid
		          from zg_t_order_plan p, zg_t_order_planbom pb
		         where p.cuid = #cuid#
		           and pb.order_plan_id = p.cuid
		           and cb.order_planbom_id = pb.cuid)
		   and cb.car_plan_id not in (select temp.cuid from zg_t_carplan temp)
	</delete>
	
	<delete id="deleteOrderPlanBomByPlanId" parameterClass="java.lang.String" >
		delete  from zg_t_order_planbom t where t.order_plan_id=#cuid#
	</delete>
	
	<delete id="deleteOrderPlanCommentByPlanId" parameterClass="java.lang.String" >
		delete  from zg_t_order_plan_comment t where t.order_plan_id=#cuid#
	</delete>
	
	<delete id="deleteOrderPlan" parameterClass="java.lang.String" >
		delete  from zg_t_order_plan t
			where t.cuid=#cuid#
	</delete>
	
	<delete id="deleteNotStartCarPlanByPlanId" parameterClass="java.lang.String" >
		    <![CDATA[	  delete from zg_t_carplan cp where exists (select 1 from zg_t_carbom cb,zg_t_order_planbom pb  where
   		cb.order_planbom_id=pb.cuid and cp.cuid=cb.car_plan_id and pb.order_plan_id='$cuid$') and cp.car_state<>'8'  ]]>
	</delete>
	
	<delete id="deleteNotStartPlanBomByPlanId" parameterClass="java.lang.String" >
		   delete from zg_t_order_planbom t where t.order_plan_id='$cuid$' and  not exists
  			 (select 1 from zg_t_carbom cb where cb.order_planbom_id=t.cuid)
	</delete>
	
	<delete id="deleteCarPlanByPlanId" parameterClass="java.lang.String" >
		    <![CDATA[	  delete from zg_t_carplan cp where exists (select 1 from zg_t_carbom cb,zg_t_order_planbom pb  where
   		cb.order_planbom_id=pb.cuid and cp.cuid=cb.car_plan_id and pb.order_plan_id='$cuid$')  ]]>
	</delete>
	
	
</sqlMap>
