<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ZgTstorage">
    <typeAlias alias="zgTstorage" type="com.boco.zg.storage.base.model.ZgTstorage"/>
	<resultMap id="zgTstorageResult" class="zgTstorage">
		<result property="cuid" column="t0_CUID"/>
		<result property="labelCn" column="t0_LABEL_CN"/>
		<result property="orderId" column="t0_ORDER_ID"/>
		<result property="orderId_related.value" column="t0_0_1_t0_AUFNR"/>
		<result property="orderId_related.relatedBmClassId" column="t0_0_1_BD"/>
		<result property="arbpl" column="t0_ARBPL"/>
		<result property="arbpl_related.value" column="t0_1_1_t0_LABEL_CN"/>
		<result property="arbpl_related.relatedBmClassId" column="t0_1_1_BD"/>
		<result property="lgort" column="t0_LGORT"/>
		<result property="lgort_related.value" column="t0_2_2_t0_LABEL_CN"/>
		<result property="lgort_related.relatedBmClassId" column="t0_2_2_BD"/>
		<result property="deptId" column="t0_DEPT_ID"/>
		<result property="deptId_related.value" column="t0_3_3_t0_LABEL_CN"/>
		<result property="deptId_related.relatedBmClassId" column="t0_3_3_BD"/>
		<result property="creatorId" column="t0_CREATOR_ID"/>
		<result property="creatorId_related.value" column="t0_4_1_t0_LABEL_CN"/>
		<result property="creatorId_related.relatedBmClassId" column="t0_4_1_BD"/>
		<result property="zbz" column="t0_ZBZ"/>
		<result property="createDate" column="t0_CREATE_DATE"/>
		<result property="state" column="t0_STATE"/>
		<result property="type" column="t0_TYPE"/>
		<result property="productType" column="t0_PRODUCT_TYPE"/>
    </resultMap>
    
    <!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
	        m.t0_CUID,
	        m.t0_LABEL_CN,
		    t0_0_1.t0_AUFNR as t0_0_1_t0_AUFNR,
	        'ZG_T_ORDER' as t0_0_1_BD,
	        m.t0_ORDER_ID,
		    t0_1_1.t0_LABEL_CN as t0_1_1_t0_LABEL_CN,
	        'FW_ORGANIZATION' as t0_1_1_BD,
	        m.t0_ARBPL,
		    t0_2_2.t0_LABEL_CN as t0_2_2_t0_LABEL_CN,
	        'FW_ORGANIZATION' as t0_2_2_BD,
	        m.t0_LGORT,
		    t0_3_3.t0_LABEL_CN as t0_3_3_t0_LABEL_CN,
	        'FW_ORGANIZATION' as t0_3_3_BD,
	        m.t0_DEPT_ID,
		    t0_4_1.t0_LABEL_CN as t0_4_1_t0_LABEL_CN,
	        'FW_EMPLOYEE' as t0_4_1_BD,
	        m.t0_CREATOR_ID,
	        m.t0_ZBZ,
	        m.t0_CREATE_DATE,
	        m.t0_STATE,
	        m.t0_TYPE,
	        m.t0_PRODUCT_TYPE
	    ]]>
	</sql>
	
	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	    	<isNotEmpty prepend="AND" property="sqlQueryString">
	    		$sqlQueryString$ 
	    	</isNotEmpty>   
		    <isNotEmpty prepend="AND" property="cuid">
	       			m.t0_CUID like #cuid#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="labelCn">
	       			m.t0_LABEL_CN like #labelCn#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="orderId">
	       			m.t0_ORDER_ID like #orderId#
       		</isNotEmpty>    
       		  <isNotEmpty prepend="AND" property="aufnr">
	       			t0_AUFNR like '%'||'$aufnr$'||'%'
       		</isNotEmpty> 
		    <isNotEmpty prepend="AND" property="arbpl">
	       			m.t0_ARBPL like #arbpl#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="lgort">
	       			m.t0_LGORT like #lgort#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="deptId">
	       			m.t0_DEPT_ID like #deptId#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="creatorId">
	       			m.t0_CREATOR_ID like #creatorId#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="zbz">
	       			m.t0_ZBZ like #zbz#
       		</isNotEmpty>    
			<isNotEmpty prepend="AND" property="createDate_start">
       			<![CDATA[m.t0_CREATE_DATE >= to_date(#createDate_start#,'yyyy-mm-dd HH24:mi:ss') ]]>
       		</isNotEmpty>
       		<isNotEmpty prepend="AND" property="createDate_end">
       			<![CDATA[m.t0_CREATE_DATE <= to_date(#createDate_end#,'yyyy-mm-dd HH24:mi:ss') ]]>
       		</isNotEmpty>
		    <isNotEmpty prepend="AND" property="state">
	       			m.t0_STATE = #state#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="type">
	       			m.t0_TYPE = #type#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="productType">
	       			m.t0_PRODUCT_TYPE = #productType#
       		</isNotEmpty>    
       		<isNotEqual property="operatorId" compareValue="0" prepend="AND">
       		  t0_creator_id=#operatorId#
       		</isNotEqual>
	    </dynamic>	
	</sql>
	
    <insert id="insertZG_T_STORAGE" parameterClass="zgTstorage">
    <![CDATA[
        INSERT INTO
        ZG_T_STORAGE (
        	CUID ,
        	LABEL_CN ,
        	ORDER_ID ,
        	ARBPL ,
        	LGORT ,
        	DEPT_ID ,
        	CREATOR_ID ,
        	ZBZ ,
        	CREATE_DATE ,
        	STATE ,
        	TYPE ,
        	PRODUCT_TYPE 
        ) VALUES (
        	#cuid# ,
        	#labelCn# ,
        	#orderId# ,
        	#arbpl# ,
        	#lgort# ,
        	#deptId# ,
        	#creatorId# ,
        	#zbz# ,
        	#createDate# ,
        	#state# ,
        	#type# ,
        	#productType# 
        )
    ]]>
    </insert>
    
    <update id="updateZG_T_STORAGE" parameterClass="zgTstorage">
    <![CDATA[
        UPDATE ZG_T_STORAGE SET
	        LABEL_CN = #labelCn# ,
	        ORDER_ID = #orderId# ,
	        ARBPL = #arbpl# ,
	        LGORT = #lgort# ,
	        DEPT_ID = #deptId# ,
	        CREATOR_ID = #creatorId# ,
	        ZBZ = #zbz# ,
	        CREATE_DATE = #createDate# ,
	        STATE = #state# ,
	        TYPE = #type# ,
	        PRODUCT_TYPE = #productType# 
	    WHERE CUID = #cuid#
    ]]>
    </update>
    
	<delete id="deleteZG_T_STORAGE" parameterClass="java.lang.String">
		delete from ZG_T_STORAGE 
		 where CUID = #cuid#
	</delete>
	
	<select id="getById" resultMap="zgTstorageResult">
	    select <include refid="commonColumns"/>
	    <![CDATA[
	       from (select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.LGORT as t0_LGORT,
	        		t0.DEPT_ID as t0_DEPT_ID,
	        		t0.CREATOR_ID as t0_CREATOR_ID,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.CREATE_DATE as t0_CREATE_DATE,
	        		t0.STATE as t0_STATE,
	        		t0.TYPE as t0_TYPE,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE
	        from 
	        ZG_T_STORAGE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ARBPL 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_3_3 on t0_3_3.t0_CUID = m.t0_DEPT_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_4_1 on t0_4_1.t0_CUID = m.t0_CREATOR_ID 
        where m.t0_CUID =#cuid# 
        ]]>
    </select>
    
    <select id="findByProperty" resultMap="zgTstorageResult">
    	select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.LGORT as t0_LGORT,
	        		t0.DEPT_ID as t0_DEPT_ID,
	        		t0.CREATOR_ID as t0_CREATOR_ID,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.CREATE_DATE as t0_CREATE_DATE,
	        		t0.STATE as t0_STATE,
	        		t0.TYPE as t0_TYPE,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE
	        from 
	        ZG_T_STORAGE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ARBPL 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_3_3 on t0_3_3.t0_CUID = m.t0_DEPT_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_4_1 on t0_4_1.t0_CUID = m.t0_CREATOR_ID 
        ]]>
        <include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="count" resultClass="long">
        select count(*) from (
        select <include refid="commonColumns"/>
        <![CDATA[
        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.LGORT as t0_LGORT,
	        		t0.DEPT_ID as t0_DEPT_ID,
	        		t0.CREATOR_ID as t0_CREATOR_ID,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.CREATE_DATE as t0_CREATE_DATE,
	        		t0.STATE as t0_STATE,
	        		t0.TYPE as t0_TYPE,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE
	        from 
	        ZG_T_STORAGE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ARBPL 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_3_3 on t0_3_3.t0_CUID = m.t0_DEPT_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_4_1 on t0_4_1.t0_CUID = m.t0_CREATOR_ID 
    	]]>
		<include refid="dynamicWhere"/> 
		)
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="zgTstorageResult">
    	select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.LGORT as t0_LGORT,
	        		t0.DEPT_ID as t0_DEPT_ID,
	        		t0.CREATOR_ID as t0_CREATOR_ID,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.CREATE_DATE as t0_CREATE_DATE,
	        		t0.STATE as t0_STATE,
	        		t0.TYPE as t0_TYPE,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE
	        from 
	        ZG_T_STORAGE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ARBPL 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_3_3 on t0_3_3.t0_CUID = m.t0_DEPT_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_4_1 on t0_4_1.t0_CUID = m.t0_CREATOR_ID 
        ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="findAll" resultMap="zgTstorageResult">
		select <include refid="commonColumns"/> 
	    <![CDATA[
	        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.LGORT as t0_LGORT,
	        		t0.DEPT_ID as t0_DEPT_ID,
	        		t0.CREATOR_ID as t0_CREATOR_ID,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.CREATE_DATE as t0_CREATE_DATE,
	        		t0.STATE as t0_STATE,
	        		t0.TYPE as t0_TYPE,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE
	        from 
	        ZG_T_STORAGE t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_1_1 on t0_1_1.t0_CUID = m.t0_ARBPL 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_3_3 on t0_3_3.t0_CUID = m.t0_DEPT_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.USER_ID as t0_USER_ID,
	        	t0.PASSWORD as t0_PASSWORD,
	        	t0.CREATE_TIME as t0_CREATE_TIME,
	        	t0.LAST_MODIFY_TIME as t0_LAST_MODIFY_TIME,
	        	t0.EFFECT_TIME as t0_EFFECT_TIME,
	        	t0.STATUS as t0_STATUS,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_OPERATOR t0
	        ) t0_4_1 on t0_4_1.t0_CUID = m.t0_CREATOR_ID 
        ]]>
    </select>
    
    <select id="sys_guid" resultClass="java.lang.String" >
				SELECT to_char(SYSTIMESTAMP,'yyyymmddhhmissff') FROM DUAL
	</select>
    
</sqlMap>
