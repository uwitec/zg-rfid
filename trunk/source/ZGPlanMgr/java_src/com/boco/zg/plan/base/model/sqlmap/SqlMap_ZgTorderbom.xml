<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ZgTorderbom">
    <typeAlias alias="zgTorderbom" type="com.boco.zg.plan.base.model.ZgTorderbom"/>
	<resultMap id="zgTorderbomResult" class="zgTorderbom">
		<result property="cuid" column="t0_CUID"/>
		<result property="labelCn" column="t0_LABEL_CN"/>
		<result property="idnrk" column="t0_IDNRK"/>
		<result property="orderId" column="t0_ORDER_ID"/>
		<result property="orderId_related.value" column="t0_0_1_t0_LABEL_CN"/>
		<result property="orderId_related.relatedBmClassId" column="t0_0_1_BD"/>
		<result property="aufnr" column="t0_AUFNR"/>
		<result property="arbpl" column="t0_ARBPL"/>
		<result property="matnr" column="t0_MATNR"/>
		<result property="matnr1" column="t0_MATNR1"/>
		<result property="maktx1" column="t0_MAKTX1"/>
		<result property="maktx2" column="t0_MAKTX2"/>
		<result property="msehl1" column="t0_MSEHL1"/>
		<result property="msehl2" column="t0_MSEHL2"/>
		<result property="zdtyl" column="t0_ZDTYL"/>
		<result property="menge" column="t0_MENGE"/>
		<result property="matkl" column="t0_MATKL"/>
		<result property="sortf" column="t0_SORTF"/>
		<result property="sortfH" column="t0_SORTF_H"/>
		<result property="lgort" column="t0_LGORT"/>
		<result property="zbz" column="t0_ZBZ"/>
		<result property="zrzqd" column="t0_ZRZQD"/>
		<result property="storageNum" column="STORAGE_NUM"/>
		<result property="storageState" column="STORAGE_STATE"/>
		<result property="lgort_label_cn" column="m_f0_label_cn"/>
		<result property="carNum" column="t0_carnum" />
		<result property="posnr" column="t0_POSNR" />
		<result property="planNum" column="plan_num" />
		<!-- orderplanbom 表属性，用于订单生产条件查询 -->
		<result property="remainNum" column="remain_num"/>
		<result property="moveNum" column="move_num" />
		<result property="backNum" column="back_Num" />
		<result property="outNum" column="out_Num" />
		<result property="completeNum" column="complete_Num" />
		<!-- 半成品库存数量 -->
		<result property="semifinStoreNum" column="semifinStoreNum"/>
    </resultMap>
    
    <!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
	        m.t0_CUID,
	        m.t0_LABEL_CN,
	        m.t0_IDNRK,
		    t0_0_1.t0_LABEL_CN as t0_0_1_t0_LABEL_CN,
	        'ZG_T_ORDER' as t0_0_1_BD,
	        m.t0_ORDER_ID,
	        m.t0_AUFNR,
	        m.t0_ARBPL,
	        m.t0_MATNR,
	        m.t0_MATNR1,
	        m.t0_MAKTX1,
	        m.t0_MAKTX2,
	        m.t0_MSEHL1,
	        m.t0_MSEHL2,
	        m.t0_ZDTYL,
	        m.t0_MENGE,
	        m.t0_MATKL,
	        m.t0_SORTF,
	        m.t0_SORTF_H,
	        m.t0_LGORT,
	        m.t0_ZBZ,
	        m.t0_ZRZQD,
	        M.STORAGE_NUM,
            M.STORAGE_STATE,
            m.f0_label_cn as m_f0_label_cn,
            t0_carnum,
            m.t0_POSNR
	    ]]>
	</sql>
	
	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	    	<isNotEmpty prepend="AND" property="sqlQueryString">
	    		$sqlQueryString$ 
	    	</isNotEmpty>   
		    <isNotEmpty prepend="AND" property="cuid">
	       			m.t0_CUID like #cuid#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="labelCn">
	       			m.t0_LABEL_CN like #labelCn#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="idnrk">
	       			m.t0_IDNRK like #idnrk#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="orderId">
	       			m.t0_ORDER_ID like #orderId#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="aufnr">
	       			m.t0_AUFNR like #aufnr#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="arbpl">
	       			m.t0_ARBPL like #arbpl#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="matnr">
	       			m.t0_MATNR like #matnr#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="matnr1">
	       			m.t0_MATNR1 like #matnr1#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="maktx1">
	       			m.t0_MAKTX1 like #maktx1#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="maktx2">
	       			m.t0_MAKTX2 like #maktx2#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="msehl1">
	       			m.t0_MSEHL1 like #msehl1#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="msehl2">
	       			m.t0_MSEHL2 like #msehl2#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="zdtyl">
	       			m.t0_ZDTYL = #zdtyl#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="menge">
	       			m.t0_MENGE = #menge#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="matkl">
	       			m.t0_MATKL like #matkl#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="sortf">
	       			m.t0_SORTF like #sortf#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="sortfH">
	       			m.t0_SORTF_H like #sortfH#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="lgort">
	       			m.t0_LGORT like #lgort#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="zbz">
	       			m.t0_ZBZ like #zbz#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="zrzqd">
	       			m.t0_ZRZQD like #zrzqd#
       		</isNotEmpty>    
       		<isNotEmpty prepend="AND" property="posnr">
       				m.t0_POSNR like #posnr#
       		</isNotEmpty> 
	    </dynamic>	
	</sql>
	
    <insert id="insertZG_T_ORDERBOM" parameterClass="zgTorderbom">
    <![CDATA[
        INSERT INTO
        ZG_T_ORDERBOM (
        	CUID ,
        	LABEL_CN ,
        	IDNRK ,
        	ORDER_ID ,
        	AUFNR ,
        	ARBPL ,
        	MATNR ,
        	MATNR1 ,
        	MAKTX1 ,
        	MAKTX2 ,
        	MSEHL1 ,
        	MSEHL2 ,
        	ZDTYL ,
        	MENGE ,
        	MATKL ,
        	SORTF ,
        	SORTF_H ,
        	LGORT ,
        	ZBZ ,
        	ZRZQD ,
        	POSNR
        ) VALUES (
        	#cuid# ,
        	#labelCn# ,
        	#idnrk# ,
        	#orderId# ,
        	#aufnr# ,
        	#arbpl# ,
        	#matnr# ,
        	#matnr1# ,
        	#maktx1# ,
        	#maktx2# ,
        	#msehl1# ,
        	#msehl2# ,
        	#zdtyl# ,
        	#menge# ,
        	#matkl# ,
        	#sortf# ,
        	#sortfH# ,
        	#lgort# ,
        	#zbz# ,
        	#zrzqd# ,
        	#posnr#
        )
    ]]>
    	<selectKey resultClass="java.lang.String" type="pre" keyProperty="cuid" >
			select sys_guid() AS ID FROM DUAL
		</selectKey>
    </insert>
    
    <update id="updateZG_T_ORDERBOM" parameterClass="zgTorderbom">
    <![CDATA[
        UPDATE ZG_T_ORDERBOM SET
	        LABEL_CN = #labelCn# ,
	        IDNRK = #idnrk# ,
	        ORDER_ID = #orderId# ,
	        AUFNR = #aufnr# ,
	        ARBPL = #arbpl# ,
	        MATNR = #matnr# ,
	        MATNR1 = #matnr1# ,
	        MAKTX1 = #maktx1# ,
	        MAKTX2 = #maktx2# ,
	        MSEHL1 = #msehl1# ,
	        MSEHL2 = #msehl2# ,
	        ZDTYL = #zdtyl# ,
	        MENGE = #menge# ,
	        MATKL = #matkl# ,
	        SORTF = #sortf# ,
	        SORTF_H = #sortfH# ,
	        LGORT = #lgort# ,
	        ZBZ = #zbz# ,
	        ZRZQD = #zrzqd# ,
	        storage_num=#storageNum#,
	        storage_state=#storageState#,
	        posnr=#posnr#
	    WHERE CUID = #cuid#
    ]]>
    </update>
    
	<delete id="deleteZG_T_ORDERBOM" parameterClass="java.lang.String">
		delete from ZG_T_ORDERBOM 
		 where CUID = #cuid#
	</delete>
	
	<select id="getById" resultMap="zgTorderbomResult">
	    select <include refid="commonColumns"/>,nvl(planbom.plan_num,0) plan_num
	    ,null as complete_num,
	    null as move_num,
	    null as back_num,
	    null as out_num,
	    null as remain_num,
	    null as semifinStoreNum
	    <![CDATA[
	       from (select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.IDNRK as t0_IDNRK,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.AUFNR as t0_AUFNR,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.MATNR as t0_MATNR,
	        		t0.MATNR1 as t0_MATNR1,
	        		t0.MAKTX1 as t0_MAKTX1,
	        		t0.MAKTX2 as t0_MAKTX2,
	        		t0.MSEHL1 as t0_MSEHL1,
	        		t0.MSEHL2 as t0_MSEHL2,
	        		t0.ZDTYL as t0_ZDTYL,
	        		t0.MENGE as t0_MENGE,
	        		t0.MATKL as t0_MATKL,
	        		t0.SORTF as t0_SORTF,
	        		t0.SORTF_H as t0_SORTF_H,
	        		t0.LGORT as t0_LGORT,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.ZRZQD as t0_ZRZQD,
	        		nvl(t0.storage_num,0) storage_num,
             		t0.storage_state,
       				f0.label_cn as f0_label_cn,
       				t0.posnr as t0_POSNR,
       				null as t0_carnum
	        from 
	        ZG_T_ORDERBOM t0,
	        fw_organization f0
  			where t0.lgort=f0.cuid(+)
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join zg_t_order_planbom planbom 
          on planbom.order_bom_id=m.t0_CUID 
        where m.t0_CUID =#cuid# 
        ]]>
    </select>
    
    <select id="findByProperty" resultMap="zgTorderbomResult">
    	select <include refid="commonColumns"/> ,
    	nvl(planbom.plan_num,0) plan_num,        
    	nvl(planbom.complete_num, 0) complete_num,
        nvl(planbom.move_num, 0) move_num,
         nvl(planbom.back_num, 0) back_num,
          nvl(planbom.out_num, 0) out_num,
        (nvl(planbom.complete_num,0)-nvl(planbom.move_num,0)-nvl(planbom.back_num,0)-nvl(planbom.out_num,0)) remain_num,
        (nvl(storagestat.num,0)-nvl(storagestat.outnum,0)) semifinStoreNum
	    <![CDATA[
	        from ( select distinct
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.IDNRK as t0_IDNRK,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.AUFNR as t0_AUFNR,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.MATNR as t0_MATNR,
	        		t0.MATNR1 as t0_MATNR1,
	        		t0.MAKTX1 as t0_MAKTX1,
	        		t0.MAKTX2 as t0_MAKTX2,
	        		t0.MSEHL1 as t0_MSEHL1,
	        		t0.MSEHL2 as t0_MSEHL2,
	        		t0.ZDTYL as t0_ZDTYL,
	        		t0.MENGE as t0_MENGE,
	        		t0.MATKL as t0_MATKL,
	        		t0.SORTF as t0_SORTF,
	        		t0.SORTF_H as t0_SORTF_H,
	        		t0.LGORT as t0_LGORT,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.ZRZQD as t0_ZRZQD,
	        		t0.storage_num,
             		t0.storage_state,
       				f0.label_cn as f0_label_cn,
       				t0.POSNR as t0_posnr,
       				bom.carnum t0_carnum
	        from 
	        ZG_T_ORDERBOM t0,
	        fw_organization f0,zg_t_bom bom
  			where t0.lgort=f0.cuid(+)  and t0.idnrk=bom.idnrk(+)  and t0.matkl=bom.matkl(+)
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        
	          left join zg_t_order_planbom planbom 
          on m.t0_CUID = planbom.order_bom_id
          left join ZG_T_STORAGE_STAT storagestat on storagestat.order_id=t0_0_1.t0_cuid and storagestat.order_bomid=m.t0_cuid
        ]]>
        <include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			t0_SORTF asc
		</dynamic>
    </select>
   
    <select id="count" resultClass="long">
        select count(*) from (
        select <include refid="commonColumns"/>, null as plan_num
        <![CDATA[
        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.IDNRK as t0_IDNRK,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.AUFNR as t0_AUFNR,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.MATNR as t0_MATNR,
	        		t0.MATNR1 as t0_MATNR1,
	        		t0.MAKTX1 as t0_MAKTX1,
	        		t0.MAKTX2 as t0_MAKTX2,
	        		t0.MSEHL1 as t0_MSEHL1,
	        		t0.MSEHL2 as t0_MSEHL2,
	        		t0.ZDTYL as t0_ZDTYL,
	        		t0.MENGE as t0_MENGE,
	        		t0.MATKL as t0_MATKL,
	        		t0.SORTF as t0_SORTF,
	        		t0.SORTF_H as t0_SORTF_H,
	        		t0.LGORT as t0_LGORT,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.ZRZQD as t0_ZRZQD,
	        		t0.storage_num,
             		t0.storage_state,
       				f0.label_cn as f0_label_cn,
       				t0.POSNR as t0_posnr,
       				null as t0_carnum
	        from 
	        ZG_T_ORDERBOM t0,
	        fw_organization f0
  			where t0.lgort=f0.cuid(+)
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
    	]]>
		<include refid="dynamicWhere"/> 
		)
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="zgTorderbomResult">
    	select <include refid="commonColumns"/> , null as plan_num
	    ,null as complete_num,
	    null as move_num,
	    null as back_num,
	    null as out_num,
	    null as remain_num,
	    null as semifinStoreNum
	    <![CDATA[
	        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.IDNRK as t0_IDNRK,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.AUFNR as t0_AUFNR,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.MATNR as t0_MATNR,
	        		t0.MATNR1 as t0_MATNR1,
	        		t0.MAKTX1 as t0_MAKTX1,
	        		t0.MAKTX2 as t0_MAKTX2,
	        		t0.MSEHL1 as t0_MSEHL1,
	        		t0.MSEHL2 as t0_MSEHL2,
	        		t0.ZDTYL as t0_ZDTYL,
	        		t0.MENGE as t0_MENGE,
	        		t0.MATKL as t0_MATKL,
	        		t0.SORTF as t0_SORTF,
	        		t0.SORTF_H as t0_SORTF_H,
	        		t0.LGORT as t0_LGORT,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.ZRZQD as t0_ZRZQD,
	        		t0.storage_num,
             		t0.storage_state,
       				f0.label_cn as f0_label_cn,
       				t0.POSNR as t0_POSNR,
       				null as t0_carnum
	        from 
	        ZG_T_ORDERBOM t0,
	        fw_organization f0
  			where t0.lgort=f0.cuid(+)
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
        ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="findAll" resultMap="zgTorderbomResult">
		select <include refid="commonColumns"/> , null as plan_num
	    ,null as complete_num,
	    null as move_num,
	    null as back_num,
	    null as out_num,
	    null as remain_num,
	    null as semifinStoreNum
	    <![CDATA[
	        from ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.IDNRK as t0_IDNRK,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.AUFNR as t0_AUFNR,
	        		t0.ARBPL as t0_ARBPL,
	        		t0.MATNR as t0_MATNR,
	        		t0.MATNR1 as t0_MATNR1,
	        		t0.MAKTX1 as t0_MAKTX1,
	        		t0.MAKTX2 as t0_MAKTX2,
	        		t0.MSEHL1 as t0_MSEHL1,
	        		t0.MSEHL2 as t0_MSEHL2,
	        		t0.ZDTYL as t0_ZDTYL,
	        		t0.MENGE as t0_MENGE,
	        		t0.MATKL as t0_MATKL,
	        		t0.SORTF as t0_SORTF,
	        		t0.SORTF_H as t0_SORTF_H,
	        		t0.LGORT as t0_LGORT,
	        		t0.ZBZ as t0_ZBZ,
	        		t0.ZRZQD as t0_ZRZQD,
	        		t0.storage_num,
             		t0.storage_state,
       				f0.label_cn as f0_label_cn,
       				t0.POSNR as t0_POSNR,
       				null as t0_carnum
	        from 
	        ZG_T_ORDERBOM t0,
	        fw_organization f0
  			where t0.lgort=f0.cuid(+)
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
        ]]>
    </select>
    
</sqlMap>
