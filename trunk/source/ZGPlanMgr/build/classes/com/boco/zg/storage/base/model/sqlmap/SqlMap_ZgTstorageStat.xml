<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ZgTstorageStat">
    <typeAlias alias="zgTstorageStat" type="com.boco.zg.storage.base.model.ZgTstorageStat"/>
	<resultMap id="zgTstorageStatResult" class="zgTstorageStat">
		<result property="cuid" column="t0_CUID"/>
		<result property="labelCn" column="t0_LABEL_CN"/>
		<result property="orderId" column="t0_ORDER_ID"/>
		<result property="orderId_related.value" column="t0_0_1_t0_AUFNR"/>
		<result property="orderId_related.relatedBmClassId" column="t0_0_1_BD"/>
		<result property="orderBomId" column="t0_ORDER_BOMID"/>
		<result property="outNum" column="t0_OUTNUM"/>
		<result property="num" column="t0_NUM"/>
		<result property="productType" column="t0_PRODUCT_TYPE"/>
		<result property="lgort" column="t0_LGORT"/>
		<result property="lgort_related.value" column="t0_2_2_t0_LABEL_CN"/>
		<result property="lgort_related.relatedBmClassId" column="t0_2_2_BD"/>
		
		<!-- 外部表属性 -->
		<result property="arbpl" column="t0_3_3_t0_ARBPL"/>
		<result property="matnr" column="t0_3_3_t0_MATNR"/>
		<result property="idnrk" column="t0_IDNRK"/>
		<result property="msehl1" column="t0_3_3_t0_MSEHL1"/>
    </resultMap>
    
    <!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
	        t0_CUID,
	        t0_LABEL_CN,
	        t0_ORDER_BOMID,
	        t0_OUTNUM,
	        t0_NUM,
	        t0_PRODUCT_TYPE,
	        t0_LGORT,
	        t0_ORDER_ID,
	        
		    t0_0_1.t0_AUFNR as t0_0_1_t0_AUFNR,
	        'ZG_T_ORDER' as t0_0_1_BD,
	        
		    t0_2_2.t0_LABEL_CN as t0_2_2_t0_LABEL_CN,
	        'FW_ORGANIZATION' as t0_2_2_BD,
	
	        'ZG_T_ORDERBOM' as t0_3_3_BD,	        
			t0_3_3.t0_arbpl_lablecn as t0_3_3_t0_ARBPL,
            t0_3_3.t0_ARBPL,
			t0_3_3.t0_MATNR as t0_3_3_t0_MATNR,
			t0_3_3.t0_IDNRK,
	        t0_3_3.t0_MSEHL1 as t0_3_3_t0_MSEHL1
	        
	    ]]>
	</sql>
	
	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	    	<isNotEmpty prepend="AND" property="sqlQueryString">
	    		$sqlQueryString$ 
	    	</isNotEmpty>   
		    <isNotEmpty prepend="AND" property="cuid">
	       			t0_CUID like #cuid#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="labelCn">
	       			t0_LABEL_CN like #labelCn#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="orderId">
	       			t0_ORDER_ID like '%'||'$orderId$'||'%' 
       		</isNotEmpty>    
       		<isNotEmpty prepend="AND" property="aufnr">
	       			t0_AUFNR like '%'||'$aufnr$'||'%' 
       		</isNotEmpty>
		    <isNotEmpty prepend="AND" property="orderBomId">
	       			t0_ORDER_BOMID like #orderBomId#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="outNum">
	       			t0_OUTNUM like #outNum#
       		</isNotEmpty>    
		    <isNotEmpty prepend="AND" property="num">
	       			t0_NUM = #num#
       		</isNotEmpty>    
       		
		    <isNotEmpty prepend="AND" property="lgort">
	       			t0_LGORT like #lgort#
       		</isNotEmpty>    
       		
       		<isNotEmpty prepend="AND" property="lgort_related.value">
	       			t0_2_2_t0_LABEL_CN like #lgort_related.value#
       		</isNotEmpty>    
       		
       		
       		<isNotEmpty prepend="AND" property="arbpl">
	       			t0_ARBPL like #arbpl#
       		</isNotEmpty>   
       		<isNotEmpty prepend="AND" property="matnr">
	       			t0_3_3_t0_MATNR like #matnr#
       		</isNotEmpty>   
       		<isNotEmpty prepend="AND" property="idnrk">
	       			t0_IDNRK like '%'||'$idnrk$'||'%'
       		</isNotEmpty>   
       		<isNotEmpty prepend="AND" property="msehl1">
	       			t0_3_3_t0_MSEHL1 like #msehl1#
       		</isNotEmpty>
       		   
       		  <isNotEmpty prepend="AND" property="type">
	       			t0_PRODUCT_TYPE like #type#
       		</isNotEmpty>  
	    </dynamic>	
	</sql>
	
    <insert id="insertZG_T_STORAGE_STAT" parameterClass="zgTstorageStat">
    <![CDATA[
        INSERT INTO
        ZG_T_STORAGE_STAT (
        	CUID ,
        	LABEL_CN ,
        	ORDER_ID ,
        	ORDER_BOMID,
        	NUM ,
        	OUTNUM,
        	PRODUCT_TYPE,
        	LGORT 
        ) VALUES (
        	#cuid# ,
        	#labelCn# ,
        	#orderId# ,
        	#orderBomId# ,
        	#num#,
        	#outNum#,
        	#productType#,
        	#lgort# 
        )
    ]]>
    	<selectKey resultClass="java.lang.String" type="pre" keyProperty="cuid" >
			select sys_guid() AS ID FROM DUAL
		</selectKey>
    </insert>
    
    <update id="updateZG_T_STORAGE_STAT" parameterClass="zgTstorageStat">
    <![CDATA[
        UPDATE ZG_T_STORAGE_STAT SET
	        LABEL_CN = #labelCn# ,
	        ORDER_ID = #orderId# ,
			ORDER_BOMID=#orderBomId#,	        
	        NUM = #num# ,
	        OUTNUM=#outNum#,
	        PRODUCT_TYPE=#productType#,
	        LGORT = #lgort# 
	    WHERE CUID = #cuid#
    ]]>
    </update>
    
	<delete id="deleteZG_T_STORAGE_STAT" parameterClass="java.lang.String">
		delete from ZG_T_STORAGE_STAT 
		 where CUID = #cuid#
	</delete>
	<!-- 连接订单表和 组织结构表 加入订单BOM表-->
	<select id="getByOrderBomId" resultMap="zgTstorageStatResult">
	    select <include refid="commonColumns"/>
	    <![CDATA[
	      from (select t0.CUID         as t0_CUID,
               t0.LABEL_CN     as t0_LABEL_CN,
               t0.ORDER_ID     as t0_ORDER_ID,
               t0.order_bomid  as T0_ORDER_BOMID ,t0.NUM as t0_NUM,
               t0.LGORT        as t0_LGORT,
               t0.product_type as T0_PRODUCT_TYPE,nvl(t0.outnum,0) as T0_OUTNUM
          from ZG_T_STORAGE_STAT t0) m
  left join (select t0.CUID        as t0_CUID1,
                    t0.LABEL_CN    as t0_LABEL_CN,
                    t0.AUFNR       as t0_AUFNR,
                    t0.ORDER_STATE as t0_ORDER_STATE,
                    t0.SUBMIT_USER as t0_SUBMIT_USER,
                    t0.SUBMIT_DATE as t0_SUBMIT_DATE,
                    t0.MANDT       as t0_MANDT,
                    t0.PXDAT       as t0_PXDAT,
                    t0.PLANT       as t0_PLANT,
                    t0.MIPOS       as t0_MIPOS,
                    t0.PCDAT       as t0_PCDAT,
                    t0.ARBPL       as t0_ARBPL,
                    t0.MATNR       as t0_MATNR,
                    t0.KDAUF       as t0_KDAUF,
                    t0.KDPOS       as t0_KDPOS,
                    t0.KDTXT       as t0_KDTXT,
                    t0.ZCKPP       as t0_ZCKPP,
                    t0.MAKTX2      as t0_MAKTX2,
                    t0.MAKTX1      as t0_MAKTX1,
                    t0.ZZCKS       as t0_ZZCKS,
                    t0.ATWRT2      as t0_ATWRT2,
                    t0.PSMNG       as t0_PSMNG,
                    t0.PMENGE      as t0_PMENGE,
                    t0.ZTXT02      as t0_ZTXT02,
                    t0.ZDBLC       as t0_ZDBLC,
                    t0.BRGEW2      as t0_BRGEW2,
                    t0.CRDAT       as t0_CRDAT,
                    t0.CPUTM       as t0_CPUTM,
                    t0.CRNAM       as t0_CRNAM,
                    t0.MRNAM       as t0_MRNAM,
                    t0.ZMUZE       as t0_ZMUZE,
                    t0.MNAME       as t0_MNAME,
                    t0.FBDAT       as t0_FBDAT,
                    t0.FBUZE       as t0_FBUZE,
                    t0.FNAME       as t0_FNAME,
                    t0.PFLAG       as t0_PFLAG
               from ZG_T_ORDER t0) t0_0_1 on t0_0_1.t0_CUID1 = m.t0_ORDER_ID
  left join (select t0.CUID                as t0_CUID2,
                    t0.LABEL_CN            as t0_LABEL_CN,
                    t0.PARENT_ORG_ID       as t0_PARENT_ORG_ID,
                    t0.LEVEL_NUM           as t0_LEVEL_NUM,
                    t0.SEQ                 as t0_SEQ,
                    t0.NOTE                as t0_NOTE,
                    t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
               from FW_ORGANIZATION t0) t0_2_2 on t0_2_2.t0_CUID2 =
                                                  m.t0_LGORT 
    left join (select 
	        	t0.CUID as t0_CUID3,
	        	t0.ORDER_ID as t0_ORDER_ID,
	        	t0.arbpl    as t0_ARBPL,
                t1.label_cn as t0_arbpl_lablecn,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.MATNR as t0_MATNR,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.MSEHL1 as t0_MSEHL1,
	        	t0.IDNRK as t0_IDNRK,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MSEHL2 as t0_MSEHL2,
	        	t0.ZDTYL as t0_ZDTYL,
	        	t0.MENGE as t0_MENGE,
	        	t0.MATKL as t0_MATKL,
	        	t0.SORTF as t0_SORTF,
	        	t0.ZBZ as t0_ZBZ,
	        	t0.ZRZQD as t0_ZRZQD
	        		from
	        	ZG_T_ORDERBOM t0,fw_organization t1 where t0.arbpl=t1.cuid
	        )t0_3_3 on t0_3_3.t0_CUID3 =m.t0_ORDER_BOMID
 where m.t0_order_bomid  =#orderBomId#  and m.t0_LGORT=#lgort#
        ]]>
    </select>
	
	<select id="getById" resultMap="zgTstorageStatResult">
	    select <include refid="commonColumns"/>
	    <![CDATA[
	      from( ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ORDER_BOMID as t0_ORDER_BOMID,
	        		t0.NUM as t0_NUM,
	        		t0.OUTNUM as t0_OUTNUM,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE,
	        		t0.LGORT as t0_LGORT
	        from 
	        ZG_T_STORAGE_STAT t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join (select 
	        	t0.CUID as t0_CUID,
	        	t0.ORDER_ID as t0_ORDER_ID,
	        	t0.arbpl    as t0_ARBPL,
                t1.label_cn as t0_arbpl_lablecn,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.MATNR as t0_MATNR,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.MSEHL1 as t0_MSEHL1,
	        	t0.IDNRK as t0_IDNRK,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MSEHL2 as t0_MSEHL2,
	        	t0.ZDTYL as t0_ZDTYL,
	        	t0.MENGE as t0_MENGE,
	        	t0.MATKL as t0_MATKL,
	        	t0.SORTF as t0_SORTF,
	        	t0.ZBZ as t0_ZBZ,
	        	t0.ZRZQD as t0_ZRZQD
	        		from
	        	ZG_T_ORDERBOM t0,fw_organization t1 where t0.arbpl=t1.cuid
	        )t0_3_3 on t0_3_3.t0_CUID =m.t0_ORDER_BOMID)
	        	
        where m.t0_CUID =#cuid# 
        ]]>
    </select>
    
    <select id="findByProperty" resultMap="zgTstorageStatResult">
    	select <include refid="commonColumns"/> 
	    <![CDATA[
	        from( ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ORDER_BOMID as t0_ORDER_BOMID,
	        		t0.NUM as t0_NUM,
	        		t0.OUTNUM as t0_OUTNUM,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE,
	        		t0.LGORT as t0_LGORT
	        from 
	        ZG_T_STORAGE_STAT t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join (select 
	        	t0.CUID as t0_CUID,
	        	t0.ORDER_ID as t0_ORDER_ID,
         		t0.arbpl    as t0_ARBPL,
                t1.label_cn as t0_arbpl_lablecn,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.MATNR as t0_MATNR,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.MSEHL1 as t0_MSEHL1,
	        	t0.IDNRK as t0_IDNRK,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MSEHL2 as t0_MSEHL2,
	        	t0.ZDTYL as t0_ZDTYL,
	        	t0.MENGE as t0_MENGE,
	        	t0.MATKL as t0_MATKL,
	        	t0.SORTF as t0_SORTF,
	        	t0.ZBZ as t0_ZBZ,
	        	t0.ZRZQD as t0_ZRZQD
	        		from
	        	ZG_T_ORDERBOM t0,fw_organization t1 where t0.arbpl=t1.cuid
	        )t0_3_3 on t0_3_3.t0_CUID =m.t0_ORDER_BOMID)
        ]]>
        <include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="count" resultClass="long">
        select count(*) from (
          select t0_CUID,
	        t0_LABEL_CN,
	        t0_ORDER_BOMID,
	        t0_OUTNUM,
	        t0_NUM,
	        t0_PRODUCT_TYPE,
	        t0_LGORT,
	        t0_ORDER_ID,
	        
		    t0_0_1.t0_AUFNR ,
	        'ZG_T_ORDER' as t0_0_1_BD,
	        
		    t0_2_2.t0_LABEL_CN as t0_2_2_t0_LABEL_CN,
	        'FW_ORGANIZATION' as t0_2_2_BD,
	
	        'ZG_T_ORDERBOM' as t0_3_3_BD,	        
			t0_3_3.t0_arbpl_lablecn as t0_3_3_t0_ARBPL,
            t0_3_3.t0_ARBPL,
			t0_3_3.t0_MATNR as t0_3_3_t0_MATNR,
			t0_3_3.t0_IDNRK,
	        t0_3_3.t0_MSEHL1 as t0_3_3_t0_MSEHL1
	        
        <![CDATA[
        from( ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ORDER_BOMID as t0_ORDER_BOMID,
	        		t0.NUM as t0_NUM,
	        		t0.OUTNUM as t0_OUTNUM,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE,
	        		t0.LGORT as t0_LGORT
	        from 
	        ZG_T_STORAGE_STAT t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join (select 
	        	t0.CUID as t0_CUID,
	        	t0.ORDER_ID as t0_ORDER_ID,
	            t0.arbpl    as t0_ARBPL,
                t1.label_cn as t0_arbpl_lablecn,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.MATNR as t0_MATNR,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.MSEHL1 as t0_MSEHL1,
	        	t0.IDNRK as t0_IDNRK,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MSEHL2 as t0_MSEHL2,
	        	t0.ZDTYL as t0_ZDTYL,
	        	t0.MENGE as t0_MENGE,
	        	t0.MATKL as t0_MATKL,
	        	t0.SORTF as t0_SORTF,
	        	t0.ZBZ as t0_ZBZ,
	        	t0.ZRZQD as t0_ZRZQD
	        		from
	        	ZG_T_ORDERBOM t0,fw_organization t1 where t0.arbpl=t1.cuid
	        )t0_3_3 on t0_3_3.t0_CUID =m.t0_ORDER_BOMID)
    	]]>) m
		<include refid="dynamicWhere"/> 
		
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="zgTstorageStatResult">
    	select <include refid="commonColumns"/> 
	    <![CDATA[
	        from( ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ORDER_BOMID as t0_ORDER_BOMID,
	        		nvl(t0.NUM,0)-nvl(t0.OUTNUM ,0) as t0_NUM,
	        		t0.OUTNUM as t0_OUTNUM,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE,
	        		t0.LGORT as t0_LGORT
	        from 
	        ZG_T_STORAGE_STAT t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join (select 
	        	t0.CUID as t0_CUID,
	        	t0.ORDER_ID as t0_ORDER_ID,
	       		t0.arbpl    as t0_ARBPL,
                t1.label_cn as t0_arbpl_lablecn,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.MATNR as t0_MATNR,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.MSEHL1 as t0_MSEHL1,
	        	t0.IDNRK as t0_IDNRK,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MSEHL2 as t0_MSEHL2,
	        	t0.ZDTYL as t0_ZDTYL,
	        	t0.MENGE as t0_MENGE,
	        	t0.MATKL as t0_MATKL,
	        	t0.SORTF as t0_SORTF,
	        	t0.ZBZ as t0_ZBZ,
	        	t0.ZRZQD as t0_ZRZQD
	        		from
	        	ZG_T_ORDERBOM t0,fw_organization t1 where t0.arbpl=t1.cuid
	        )t0_3_3 on t0_3_3.t0_CUID =m.t0_ORDER_BOMID)
        ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>
    
    <select id="findAll" resultMap="zgTstorageStatResult">
		select <include refid="commonColumns"/> 
	    <![CDATA[
	        from( ( select 
	        		t0.CUID as t0_CUID,
	        		t0.LABEL_CN as t0_LABEL_CN,
	        		t0.ORDER_ID as t0_ORDER_ID,
	        		t0.ORDER_BOMID as t0_ORDER_BOMID,
	        		t0.NUM as t0_NUM,
	        		t0.OUTNUM as t0_OUTNUM,
	        		t0.PRODUCT_TYPE as t0_PRODUCT_TYPE,
	        		t0.LGORT as t0_LGORT
	        from 
	        ZG_T_STORAGE_STAT t0
 ) m
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.ORDER_STATE as t0_ORDER_STATE,
	        	t0.SUBMIT_USER as t0_SUBMIT_USER,
	        	t0.SUBMIT_DATE as t0_SUBMIT_DATE,
	        	t0.MANDT as t0_MANDT,
	        	t0.PXDAT as t0_PXDAT,
	        	t0.PLANT as t0_PLANT,
	        	t0.MIPOS as t0_MIPOS,
	        	t0.PCDAT as t0_PCDAT,
	        	t0.ARBPL as t0_ARBPL,
	        	t0.MATNR as t0_MATNR,
	        	t0.KDAUF as t0_KDAUF,
	        	t0.KDPOS as t0_KDPOS,
	        	t0.KDTXT as t0_KDTXT,
	        	t0.ZCKPP as t0_ZCKPP,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.ZZCKS as t0_ZZCKS,
	        	t0.ATWRT2 as t0_ATWRT2,
	        	t0.PSMNG as t0_PSMNG,
	        	t0.PMENGE as t0_PMENGE,
	        	t0.ZTXT02 as t0_ZTXT02,
	        	t0.ZDBLC as t0_ZDBLC,
	        	t0.BRGEW2 as t0_BRGEW2,
	        	t0.CRDAT as t0_CRDAT,
	        	t0.CPUTM as t0_CPUTM,
	        	t0.CRNAM as t0_CRNAM,
	        	t0.MRNAM as t0_MRNAM,
	        	t0.ZMUZE as t0_ZMUZE,
	        	t0.MNAME as t0_MNAME,
	        	t0.FBDAT as t0_FBDAT,
	        	t0.FBUZE as t0_FBUZE,
	        	t0.FNAME as t0_FNAME,
	        	t0.PFLAG as t0_PFLAG
	        	 from
		        ZG_T_ORDER t0
	        ) t0_0_1 on t0_0_1.t0_CUID = m.t0_ORDER_ID 
	        left join  ( select 
	        	t0.CUID as t0_CUID,
	        	t0.LABEL_CN as t0_LABEL_CN,
	        	t0.PARENT_ORG_ID as t0_PARENT_ORG_ID,
	        	t0.LEVEL_NUM as t0_LEVEL_NUM,
	        	t0.SEQ as t0_SEQ,
	        	t0.NOTE as t0_NOTE,
	        	t0.RELATED_BM_CLASS_ID as t0_RELATED_BM_CLASS_ID
	        	 from
		        FW_ORGANIZATION t0
	        ) t0_2_2 on t0_2_2.t0_CUID = m.t0_LGORT 
	        left join (select 
	        	t0.CUID as t0_CUID,
	        	t0.ORDER_ID as t0_ORDER_ID,
                t0.arbpl    as t0_ARBPL,
                t1.label_cn as t0_arbpl_lablecn,
	        	t0.AUFNR as t0_AUFNR,
	        	t0.MATNR as t0_MATNR,
	        	t0.MAKTX1 as t0_MAKTX1,
	        	t0.MSEHL1 as t0_MSEHL1,
	        	t0.IDNRK as t0_IDNRK,
	        	t0.MAKTX2 as t0_MAKTX2,
	        	t0.MSEHL2 as t0_MSEHL2,
	        	t0.ZDTYL as t0_ZDTYL,
	        	t0.MENGE as t0_MENGE,
	        	t0.MATKL as t0_MATKL,
	        	t0.SORTF as t0_SORTF,
	        	t0.ZBZ as t0_ZBZ,
	        	t0.ZRZQD as t0_ZRZQD
	        		from
	        	ZG_T_ORDERBOM t0,fw_organization t1 where t0.arbpl=t1.cuid
	        )t0_3_3 on t0_3_3.t0_CUID =m.t0_ORDER_BOMID)
        ]]>
    </select>
    
</sqlMap>
